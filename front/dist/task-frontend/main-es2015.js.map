{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/service/user-service.service.ts","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACA;AACS;AACT;;;AAGzD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAC;IACpC,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IACzC,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;IAC/C,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IACzC,EAAC,IAAI,EAAC,IAAI,EAAE,SAAS,EAAE,qEAAc,EAAC;CAEvC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,eAAe,CAAC;KACzB;;wEAFY,YAAY;4FAAZ,YAAY;QCLzB,wEAAyB;QACzB,2EAA+B;QAC/B,wEAAyB;;6FDGZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACU;AACA;AACZ;AACe;AACA;AACH;AACS;AACV;;AAqBjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,sEAAgB;YAChB,0DAAW;SACZ;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,qEAAc;QACd,qEAAc;QACd,wEAAe;QACf,wEAAe;QACf,qEAAc;QACd,+EAAiB,aAGjB,uEAAa;QACb,oEAAgB;QAChB,sEAAgB;QAChB,0DAAW;6FAKF,SAAS;cAnBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,qEAAc;oBACd,wEAAe;oBACf,wEAAe;oBACf,qEAAc;oBACd,+EAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,sEAAgB;oBAChB,0DAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,cAAc;IAGzB;QADA,iBAAY,GAAG,mBAAmB;IAClB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EANU,cAAc;8FAAd,cAAc;QCP3B,uDAAgB;;QAAhB,iFAAgB;;6FDOH,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,4EACI;QAAA,yEACI;QAAA,0EAAyB;QAAA,sGAA2C;QAAA,4DAAO;QAC/E,4DAAM;QAEV,4DAAS;;6FDEI,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,yEACI;QAAA,sEAAK;QAAA,uEACA;QAAA,gEAAI;QAAA,4DAAI;QAAA,4DAAM;QACvB,4DAAM;QACV,4DAAS;;6FDEI,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICK9C,yEAAsD;IAAA,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,oFAAgB;;;IACtE,yEAAiD;IAAA,uDAAW;IAAA,4DAAM;;;IAAjB,0DAAW;IAAX,+EAAW;;;IAC5D,yEAA4E;IAAA,6EAAkB;IAAA,4DAAM;;ADCjG,MAAM,cAAc;IAUzB,YAAoB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;QAFnD,iBAAY,GAAG,KAAK;IAEmC,CAAC;IAExD,QAAQ;IACR,CAAC;IAED,WAAW,CAAC,KAAK,EAAC,QAAQ;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAC,QAAQ,CAAC;aACnC,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,OAAO,GAAC,aAAa;YAC1B,IAAI,CAAC,YAAY,GAAC,EAAE;QACtB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC,KAAK,CAAC,OAAO;YACrC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;YAChC,IAAI,CAAC,OAAO,GAAC,EAAE;QACjB,CAAC,CACF;IACT,CAAC;IAGD,YAAY,CAAC,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC;aAC3B,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,OAAO,GAAC,iBAAiB;YAC9B,IAAI,CAAC,YAAY,GAAC,EAAE;QACtB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC,KAAK,CAAC,OAAO;YACrC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;YAChC,IAAI,CAAC,OAAO,GAAC,EAAE;QACjB,CAAC,CACF;IACT,CAAC;;4EAhDU,cAAc;8FAAd,cAAc;QCR3B,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QAEd,yEAEE;QAAA,yEACE;QAAA,0GAAsD;QACtD,0GAAiD;QACjD,0GAA4E;QAE5E,6EAEE;QAAA,8EACE;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,4EACF;QADsB,kLAAmB;QAAvC,4DACF;QAAA,4DAAW;QAEX,+EACE;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,4EACF;QADyB,qLAAsB;QAA7C,4DACF;QAAA,4DAAW;QAEX,6EAAoF;QAAtC,uIAAS,wCAA2B,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAClG,6EAA0E;QAA9B,uIAAS,2BAAmB,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC3F,4DAAO;QACT,4DAAM;QAER,4DAAM;;;QArB+B,0DAAoB;QAApB,kFAAoB;QACpB,0DAAe;QAAf,6EAAe;QACf,0DAA0C;QAA1C,0FAA0C;QAMnD,0DAAmB;QAAnB,8EAAmB;QAKhB,0DAAsB;QAAtB,iFAAsB;;6FDVxC,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEF;;;;;;ICE5C,0EAAsD;IAAA,uDAAgB;IAAA,4DAAM;;;IAAtB,0DAAgB;IAAhB,oFAAgB;;;IACtE,0EAAiD;IAAA,uDAAW;IAAA,4DAAM;;;IAAjB,0DAAW;IAAX,+EAAW;;ADMzD,MAAM,iBAAiB;IAO5B,YAAoB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;IAAI,CAAC;IAExD,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,2DAAI,CAAC,EAAE,EAAC,IAAI,EAAC,IAAI,EAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;aAC/B,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI;YACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,OAAO,GAAC,6BAA6B;YAC1C,IAAI,CAAC,YAAY,GAAC,EAAE;QACtB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC,KAAK,CAAC,OAAO;YACrC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;YAChC,IAAI,CAAC,OAAO,GAAC,EAAE;QACjB,CAAC,CACF;IACT,CAAC;;kFA5BU,iBAAiB;iGAAjB,iBAAiB;QCX9B,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QAEjB,yEACI;QACA,6GAAsD;QACtD,6GAAiD;QAEjD,yEACI;QAAA,6EACI;QADE,6IAAY,gBAAY,IAAC;QAC3B,8EACI;QAAA,wEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,+EAEJ;QAF2C,6LAA2B;QAAlE,4DAEJ;QAAA,4DAAW;QAEX,+EACI;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,+EAEJ;QAFwC,0LAAwB;QAA5D,4DAEJ;QAAA,4DAAW;QAEX,+EACI;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,gFAEJ;QAF+C,6LAA2B;QAAtE,4DAEJ;QAAA,4DAAW;QAEX,8EAA8C;QAAA,mEAAO;QAAA,4DAAS;QAClE,4DAAO;QACX,4DAAM;QAEV,4DAAM;;QA3B+B,0DAAoB;QAApB,kFAAoB;QACpB,0DAAe;QAAf,6EAAe;QAMG,0DAA2B;QAA3B,sFAA2B;QAM9B,0DAAwB;QAAxB,mFAAwB;QAMjB,0DAA2B;QAA3B,sFAA2B;;6FDZzE,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAA2C;;;AAWpC,MAAM,kBAAkB;IAG7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,6BAA6B,CAAC;IAC7D,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,6BAA6B,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,SAAS,CAAC,KAAK,EAAE,QAAQ;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,0CAA0C,KAAK,aAAa,QAAQ,EAAE,CAAC;IACtG,CAAC;IAED,UAAU,CAAC,KAAK;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,2CAA2C,KAAK,EAAE,CAAC;IAClF,CAAC;IAED,mBAAmB;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,oCAAoC,CAAC;IACpE,CAAC;;oFAxBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;ICc5C,qEACE;IAAA,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACzB,4DAAK;;;IAFC,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAc;IAAd,8EAAc;;;IAqBpB,qEACE;IAAA,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAc;IAAA,4DAAK;IACzB,4DAAK;;;IAFC,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAc;IAAd,8EAAc;;ADnCnB,MAAM,IAAI;IAEf,YACS,QAAgB,EAChB,KAAa,EACb,QAAgB,EAChB,QAAiB;QAHjB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,aAAQ,GAAR,QAAQ,CAAS;IACtB,CAAC;CACN;AAOM,MAAM,cAAc;IAKzB,YAAoB,WAA+B;QAA/B,gBAAW,GAAX,WAAW,CAAoB;IAAI,CAAC;IAExD,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAC3C,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;IACN,CAAC;IACD,sBAAsB;QACpB,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAC9C,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC9B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;IACN,CAAC;;4EA5BU,cAAc;8FAAd,cAAc;QCnB3B,qEAAK;QAAA,sEAAU;QAAA,4DAAK;QAIpB,yEACE;QAAA,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,2EACE;QAAA,wEACE;QAAA,qEACE;QAAA,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QAChB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,0GACE;QAGJ,4DAAQ;QAEV,4DAAQ;QAEV,4DAAM;QAGN,0EACE;QAAA,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,4EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QAEhB,4DAAK;QACP,4DAAQ;QACR,yEAEE;QAAA,0GACE;QAGJ,4DAAQ;QAEV,4DAAQ;QACV,4DAAM;;QA9BI,2DAA6B;QAA7B,iFAA6B;QAuB7B,2DAAgC;QAAhC,oFAAgC;;6FDlB7B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AElBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ErrorComponent } from './error/error.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UsersComponent } from './users/users.component';\n\n\nconst routes: Routes = [\n  {path:'', component: LoginComponent},\n  {path:'login', component: LoginComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'users', component: UsersComponent},\n  {path:'**', component: ErrorComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'task-frontend';\n}\n","<!-- <app-login></app-login> -->\n<!-- <app-users></app-users> -->\n<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UsersComponent } from './users/users.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ErrorComponent } from './error/error.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    LoginComponent,\n    FooterComponent,\n    HeaderComponent,\n    ErrorComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = 'An Error Occured!'\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","{{errorMessage}}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n    <div class=\"container\">\n        <span class=\"text-muted\">All Rights Reserved 2021 @Kareem Elsayed :)</span>\n    </div>\n\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <div><a href=# class=\"navbar-brand\">\n             Task</a></div>\n    </nav>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../service/user-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email : string;\n  password : string;\n\n  message : string;\n\n  errorMessage : string;\n  invalidLogin = false\n\n  constructor(private userService: UserServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  handleLogin(email,password){\n    console.log(this.email)\n    this.userService.loginUser(email,password)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.message='User Logged'\n              this.errorMessage=''\n            },\n            error => {\n              this.errorMessage=error.error.message\n              console.log(error.error.message)\n              this.message=''\n            }\n          )\n  }\n\n\n  handleLogout(email){\n    console.log(this.email)\n    this.userService.logoutUser(email)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.message='User Logged out'\n              this.errorMessage=''\n            },\n            error => {\n              this.errorMessage=error.error.message\n              console.log(error.error.message)\n              this.message=''\n            }\n          )\n  }\n}\n","<H1>Login</H1>\n\n<div class=\"container\">\n\n  <div class=\"container\">\n    <div class=\"alert alert-warning\" *ngIf='errorMessage'>{{errorMessage}}</div>\n    <div class=\"alert alert-warning\" *ngIf='message'>{{message}}</div>\n    <div class=\"alert alert-warning\" *ngIf=\"userForm.dirty && userForm.invalid\">Enter valid values</div>\n\n    <form novalidate #userForm=\"ngForm\">\n\n      <fieldset class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\"  [(ngModel)]=\"email\" class=\"form-control\" name=\"email\" required=\"required\">\n      </fieldset>\n\n      <fieldset class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" class=\"form-control\" name=\"password\" required=\"required\">\n      </fieldset>\n\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"handleLogin(email,password)\">Login</button>\n      <button type=\"submit\" class=\"btn btn-alert\" (click)=\"handleLogout(email)\">Logout</button>\n    </form>\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../service/user-service.service';\nimport { User } from '../users/users.component';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  // myWebSocket: WebSocketSubject<any> = webSocket('ws://localhost:8000');\n  user:User;\n  message : string;\n  errorMessage : string;\n\n  constructor(private userService: UserServiceService) { }\n\n  ngOnInit(): void {\n    this.user = new User('',null,null,false);\n  }\n\n  createUser(){\n    this.userService.addNewUser(this.user)\n          .subscribe (\n            data => {\n              data => this.user = data\n              console.log(data)\n              this.message='User Signed up Successfully'\n              this.errorMessage=''\n            },\n            error => {\n              this.errorMessage=error.error.message\n              console.log(error.error.message)\n              this.message=''\n            }\n          )\n  }\n\n  // sendUser(){\n  //   if (this.user) {\n  //         this.userService.sendUser(this.user);\n  //         this.user = null;\n  //       }\n  // }\n\n}\n","<H1>Register</H1>\n\n<div class=\"container\">\n    <!-- <div class=\"alert alert-warning\" *ngIf='invalidLogin'>{{errorMessage}}</div> -->\n    <div class=\"alert alert-warning\" *ngIf='errorMessage'>{{errorMessage}}</div>\n    <div class=\"alert alert-warning\" *ngIf='message'>{{message}}</div>\n\n    <div class=\"container\">\n        <form (ngSubmit)=\"createUser()\" #userForm=\"ngForm\">\n            <fieldset class=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" #userName=\"ngModel\" [(ngModel)]=\"user.userName\" class=\"form-control\" name=\"userName\"\n                    required=\"required\">\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n                <label>email</label>\n                <input type=\"text\" #email=\"ngModel\" [(ngModel)]=\"user.email\" class=\"form-control\" name=\"email\"\n                    required=\"required\">\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n                <label>password</label>\n                <input type=\"password\" #password=\"ngModel\" [(ngModel)]=\"user.password\" class=\"form-control\"\n                    name=\"password\" required=\"required\">\n            </fieldset>\n\n            <button type=\"submit\" class=\"btn btn-success\">Sign Up</button>\n        </form>\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { User } from '../users/users.component';\nimport { HttpClient } from '@angular/common/http';\nimport * as Stomp from 'stompjs';\nimport * as SockJS from 'sockjs-client';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n  // stompClient: any;\n  user : User[] ;\n  constructor(private http: HttpClient) { }\n\n  retrieveAllUsers() {\n    return this.http.get<User[]>('http://localhost:8080/users')\n  }\n\n  addNewUser(user) {\n    return this.http.post(\n      'http://localhost:8080/users', user);\n  }\n\n  loginUser(email, password) {\n    return this.http.get<User[]>(`http://localhost:8080/user/login?email=${email}&password=${password}`)\n  }\n\n  logoutUser(email) {\n    return this.http.get<User[]>(`http://localhost:8080/user/logout?email=${email}`)\n  }\n\n  retrieveLoggedUsers() {\n    return this.http.get<User[]>('http://localhost:8080/users/logged')\n  }\n\n\n\n  // initializeWebSocketConnection() {\n  //   const serverUrl = 'http://localhost:8080/users';\n  //   const ws = new SockJS(serverUrl);\n  //   this.stompClient = Stomp.over(ws);\n  //   const that = this;\n  //   // tslint:disable-next-line:only-arrow-functions\n  //   this.stompClient.connect({}, function(frame) {\n  //     that.stompClient.subscribe('/users', (user) => {\n  //       if (user) {\n  //         that.user.push(user);\n  //       }\n  //     });\n  //   });\n  // }\n\n\n  // sendUser(user) {\n  //   this.stompClient.send('/app/users' , {}, user);\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../service/user-service.service';\n\n\nexport class User {\n\n  constructor(\n    public userName: string,\n    public email: string,\n    public password: string,\n    public isLogged: Boolean\n    ){}\n}\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  allUsers: User[];\n  loggedUsers : User[];\n  error: String;\n  constructor(private userService: UserServiceService) { }\n\n  ngOnInit(): void {\n    this.retrieveAllUsers();\n    this.retrieveAllLoggedUsers();\n  }\n  retrieveAllUsers() {\n    this.userService.retrieveAllUsers().subscribe(\n      response => {\n        this.allUsers = response;\n      },\n      error => {\n        this.error = error;\n      })\n  }\n  retrieveAllLoggedUsers(){\n    this.userService.retrieveLoggedUsers().subscribe(\n      response => {\n        this.loggedUsers = response;\n      },\n      error => {\n        this.error = error;\n      })\n  }\n\n  \n}\n","<h1> Dashboard </h1>\n\n<!-- <div class=\"alert alert-success\" *ngIf='message'>{{message}}</div> -->\n\n<div class=\"container\">\n  <h3>All Users</h3>\n  <table class=\"table\" >\n    <thead>\n      <tr>\n        <th>User_Name</th>\n        <th>Email</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor='let user of allUsers'>\n        <td>{{user.userName}}</td>\n        <td>{{user.email}}</td>\n      </tr>\n    </tbody>\n\n  </table>\n\n</div>\n\n\n<div class=\"container\">\n  <h3>Logged Users</h3>\n  <table class=\"table\" >\n    <thead>\n      <tr>\n        <th>User_Name</th>\n        <th>Email</th>\n\n      </tr>\n    </thead>\n    <tbody>\n\n      <tr *ngFor='let user of loggedUsers'>\n        <td>{{user.userName}}</td>\n        <td>{{user.email}}</td>\n      </tr>\n    </tbody>\n\n  </table>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}