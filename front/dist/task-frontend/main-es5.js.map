{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/service/user-service.service.ts","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ErrorComponent","errorMessage","FooterComponent","HeaderComponent","LoginComponent","userService","invalidLogin","email","password","console","log","loginUser","subscribe","data","message","error","logoutUser","handleLogin","handleLogout","RegisterComponent","user","addNewUser","createUser","UserServiceService","http","get","post","providedIn","User","userName","isLogged","UsersComponent","retrieveAllUsers","retrieveAllLoggedUsers","response","allUsers","retrieveLoggedUsers","loggedUsers","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ErrorComponent } from './error/error.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UsersComponent } from './users/users.component';\n\n\nconst routes: Routes = [\n  {path:'', component: LoginComponent},\n  {path:'login', component: LoginComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'users', component: UsersComponent},\n  {path:'**', component: ErrorComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'task-frontend';\n}\n","<!-- <app-login></app-login> -->\n<!-- <app-users></app-users> -->\n<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UsersComponent } from './users/users.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ErrorComponent } from './error/error.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    LoginComponent,\n    FooterComponent,\n    HeaderComponent,\n    ErrorComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  errorMessage = 'An Error Occured!'\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","{{errorMessage}}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\">\n    <div class=\"container\">\n        <span class=\"text-muted\">All Rights Reserved 2021 @Kareem Elsayed :)</span>\n    </div>\n\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <div><a href=# class=\"navbar-brand\">\n             Task</a></div>\n    </nav>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../service/user-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email : string;\n  password : string;\n\n  message : string;\n\n  errorMessage : string;\n  invalidLogin = false\n\n  constructor(private userService: UserServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  handleLogin(email,password){\n    console.log(this.email)\n    this.userService.loginUser(email,password)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.message='User Logged'\n              this.errorMessage=''\n            },\n            error => {\n              this.errorMessage=error.error.message\n              console.log(error.error.message)\n              this.message=''\n            }\n          )\n  }\n\n\n  handleLogout(email){\n    console.log(this.email)\n    this.userService.logoutUser(email)\n          .subscribe (\n            data => {\n              console.log(data)\n              this.message='User Logged out'\n              this.errorMessage=''\n            },\n            error => {\n              this.errorMessage=error.error.message\n              console.log(error.error.message)\n              this.message=''\n            }\n          )\n  }\n}\n","<H1>Login</H1>\n\n<div class=\"container\">\n\n  <div class=\"container\">\n    <div class=\"alert alert-warning\" *ngIf='errorMessage'>{{errorMessage}}</div>\n    <div class=\"alert alert-warning\" *ngIf='message'>{{message}}</div>\n    <div class=\"alert alert-warning\" *ngIf=\"userForm.dirty && userForm.invalid\">Enter valid values</div>\n\n    <form novalidate #userForm=\"ngForm\">\n\n      <fieldset class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\"  [(ngModel)]=\"email\" class=\"form-control\" name=\"email\" required=\"required\">\n      </fieldset>\n\n      <fieldset class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" class=\"form-control\" name=\"password\" required=\"required\">\n      </fieldset>\n\n      <button type=\"submit\" class=\"btn btn-success\" (click)=\"handleLogin(email,password)\">Login</button>\n      <button type=\"submit\" class=\"btn btn-alert\" (click)=\"handleLogout(email)\">Logout</button>\n    </form>\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../service/user-service.service';\nimport { User } from '../users/users.component';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  // myWebSocket: WebSocketSubject<any> = webSocket('ws://localhost:8000');\n  user:User;\n  message : string;\n  errorMessage : string;\n\n  constructor(private userService: UserServiceService) { }\n\n  ngOnInit(): void {\n    this.user = new User('',null,null,false);\n  }\n\n  createUser(){\n    this.userService.addNewUser(this.user)\n          .subscribe (\n            data => {\n              data => this.user = data\n              console.log(data)\n              this.message='User Signed up Successfully'\n              this.errorMessage=''\n            },\n            error => {\n              this.errorMessage=error.error.message\n              console.log(error.error.message)\n              this.message=''\n            }\n          )\n  }\n\n  // sendUser(){\n  //   if (this.user) {\n  //         this.userService.sendUser(this.user);\n  //         this.user = null;\n  //       }\n  // }\n\n}\n","<H1>Register</H1>\n\n<div class=\"container\">\n    <!-- <div class=\"alert alert-warning\" *ngIf='invalidLogin'>{{errorMessage}}</div> -->\n    <div class=\"alert alert-warning\" *ngIf='errorMessage'>{{errorMessage}}</div>\n    <div class=\"alert alert-warning\" *ngIf='message'>{{message}}</div>\n\n    <div class=\"container\">\n        <form (ngSubmit)=\"createUser()\" #userForm=\"ngForm\">\n            <fieldset class=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" #userName=\"ngModel\" [(ngModel)]=\"user.userName\" class=\"form-control\" name=\"userName\"\n                    required=\"required\">\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n                <label>email</label>\n                <input type=\"text\" #email=\"ngModel\" [(ngModel)]=\"user.email\" class=\"form-control\" name=\"email\"\n                    required=\"required\">\n            </fieldset>\n\n            <fieldset class=\"form-group\">\n                <label>password</label>\n                <input type=\"password\" #password=\"ngModel\" [(ngModel)]=\"user.password\" class=\"form-control\"\n                    name=\"password\" required=\"required\">\n            </fieldset>\n\n            <button type=\"submit\" class=\"btn btn-success\">Sign Up</button>\n        </form>\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { User } from '../users/users.component';\nimport { HttpClient } from '@angular/common/http';\nimport * as Stomp from 'stompjs';\nimport * as SockJS from 'sockjs-client';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n  // stompClient: any;\n  user : User[] ;\n  constructor(private http: HttpClient) { }\n\n  retrieveAllUsers() {\n    return this.http.get<User[]>('http://localhost:8080/users')\n  }\n\n  addNewUser(user) {\n    return this.http.post(\n      'http://localhost:8080/users', user);\n  }\n\n  loginUser(email, password) {\n    return this.http.get<User[]>(`http://localhost:8080/user/login?email=${email}&password=${password}`)\n  }\n\n  logoutUser(email) {\n    return this.http.get<User[]>(`http://localhost:8080/user/logout?email=${email}`)\n  }\n\n  retrieveLoggedUsers() {\n    return this.http.get<User[]>('http://localhost:8080/users/logged')\n  }\n\n\n\n  // initializeWebSocketConnection() {\n  //   const serverUrl = 'http://localhost:8080/users';\n  //   const ws = new SockJS(serverUrl);\n  //   this.stompClient = Stomp.over(ws);\n  //   const that = this;\n  //   // tslint:disable-next-line:only-arrow-functions\n  //   this.stompClient.connect({}, function(frame) {\n  //     that.stompClient.subscribe('/users', (user) => {\n  //       if (user) {\n  //         that.user.push(user);\n  //       }\n  //     });\n  //   });\n  // }\n\n\n  // sendUser(user) {\n  //   this.stompClient.send('/app/users' , {}, user);\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserServiceService } from '../service/user-service.service';\n\n\nexport class User {\n\n  constructor(\n    public userName: string,\n    public email: string,\n    public password: string,\n    public isLogged: Boolean\n    ){}\n}\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  allUsers: User[];\n  loggedUsers : User[];\n  error: String;\n  constructor(private userService: UserServiceService) { }\n\n  ngOnInit(): void {\n    this.retrieveAllUsers();\n    this.retrieveAllLoggedUsers();\n  }\n  retrieveAllUsers() {\n    this.userService.retrieveAllUsers().subscribe(\n      response => {\n        this.allUsers = response;\n      },\n      error => {\n        this.error = error;\n      })\n  }\n  retrieveAllLoggedUsers(){\n    this.userService.retrieveLoggedUsers().subscribe(\n      response => {\n        this.loggedUsers = response;\n      },\n      error => {\n        this.error = error;\n      })\n  }\n\n  \n}\n","<h1> Dashboard </h1>\n\n<!-- <div class=\"alert alert-success\" *ngIf='message'>{{message}}</div> -->\n\n<div class=\"container\">\n  <h3>All Users</h3>\n  <table class=\"table\" >\n    <thead>\n      <tr>\n        <th>User_Name</th>\n        <th>Email</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor='let user of allUsers'>\n        <td>{{user.userName}}</td>\n        <td>{{user.email}}</td>\n      </tr>\n    </tbody>\n\n  </table>\n\n</div>\n\n\n<div class=\"container\">\n  <h3>Logged Users</h3>\n  <table class=\"table\" >\n    <thead>\n      <tr>\n        <th>User_Name</th>\n        <th>Email</th>\n\n      </tr>\n    </thead>\n    <tbody>\n\n      <tr *ngFor='let user of loggedUsers'>\n        <td>{{user.userName}}</td>\n        <td>{{user.email}}</td>\n      </tr>\n    </tbody>\n\n  </table>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}